---
title: "Adherence Aim"
format: docx
editor: visual
editor_options: 
  chunk_output_type: console
execute:
  cache: true  
---

## Medication use during a pandemic

Chrystelle Kiang

```{r}
#| include: false
#| label: setup

library(here) 
library(tidyverse)
library(AdhereR)
library(gtsummary)
library(patchwork)
library(flextable) 

# this dataset has all eligible study population 
# created in data_creation.R 
# this version has multiple tumors per StudyID
pharmstudydata <- readRDS("studypopdata.rds")

elig_pop <- pharmstudydata %>%
  distinct(StudyID, .keep_all = TRUE) 

# subset pts who have rx and those who have rx after diagnosis
rx_before_dx <- pharmstudydata %>%
  filter(dispense_dt <= dt_diagnosis) %>%
    distinct(StudyID, .keep_all = TRUE)

# number with prescriptions outside of study period
rx_before_study <- pharmstudydata %>%
  anti_join(rx_before_dx, by = "StudyID") %>%
  group_by(StudyID) %>%
  arrange(dispense_dt) %>%
   summarise(last_dispense = max(dispense_dt)) %>%
  select(StudyID, last_dispense) %>%
  filter(!is.na(last_dispense),
         last_dispense < as.Date("2017-09-01", format = "%Y-%m-%d")) 

pop_no_rx <- pharmstudydata %>% 
  filter(is.na(dispense_dt)) %>%
      distinct(StudyID, .keep_all = TRUE)

study_pop <- pharmstudydata %>% 
  anti_join(rx_before_dx, by = "StudyID") %>%
  filter(!is.na(dispense_dt),
         dispense_dt >= as.Date("2017-09-01", format = "%Y-%m-%d")) %>%
  mutate(daily_dose = 1)
  # only keep those with pharm info and after Sept 2017 to allow for fills that occur before 2018-01-01
# TODO check with notebook code

pharmstudydata <- pharmstudydata %>%
  mutate(final_study = ifelse(StudyID %in% study_pop$StudyID, 1, 0))

pop_info <- list(total_elig = n_distinct(elig_pop$StudyID),
                 no_rx = n_distinct(pop_no_rx$StudyID),
                 rx_predx = n_distinct(rx_before_dx$StudyID),
                 rx_prestudy = n_distinct(rx_before_study$StudyID),
                 total_study = n_distinct(study_pop$StudyID),
                 no_rx_percent = n_distinct(pop_no_rx$StudyID)/n_distinct(elig_pop$StudyID))
# TODO add %s? perhaps make a matrix and refer to that in the paragraph
```

### Study Population

There were `r formatC(pop_info$total_elig, big.mark = ",")` patients who were diagnosed with breast cancer stages I to III from January 1, 2015 to July 31, 2019 and captured in the Georgia Cancer Registry. We did not have pharmacy claims data for `r formatC(pop_info$no_rx, big.mark = ",")` (`r formatC(pop_info$no_rx_percent*100, digits = 4, flag = "#")`%) patients. Among those with pharmacy claims data, `r formatC(pop_info$rx_predx, big.mark = ",")` had endocrine therapy before their date of diagnosis and `r formatC(pop_info$rx_prestudy, big.mark = ",")` only had prescriptions before the study period and were excluded. The final study population consisted of `r formatC(pop_info$total_study, big.mark = ",")` patients.

```{r}
#| echo: false
#| warning: false
#| label: study-pop
#| tbl-cap: "Table 1"

# subset by demographic variable of interest
demo <- study_pop %>%
  group_by(StudyID) %>%
  slice(n()) %>%
  select(StudyID, CTCDATE_OF_DIAGNOSIS_YYYY, ERstatus, estrogen_receptor, stage_summary, drug_group, RURALURBAN_CONTINUUM_2013, sex:reporting_source) %>%
  # creating this here in case we change these definitions
  mutate(urb_rural = case_when(
    RURALURBAN_CONTINUUM_2013 %in% c(1:7) ~ "Urban",
    RURALURBAN_CONTINUUM_2013 %in% c(8,9) ~ "Rural"))

raceeth <- list(
  n_asian = n_distinct(demo %>% filter(race_ethnicity == "NH Asian")),
  n_blackAA = n_distinct(demo %>% filter(race_ethnicity == "NH Black or African American")),
  n_hispanic = n_distinct(demo %>% filter(race_ethnicity == "Hispanic")),
  n_other = n_distinct(demo %>% filter(race_ethnicity == "NH AI, AN, or other race")),
  n_unknown = n_distinct(demo %>% filter(race_ethnicity == "Unknown by patient")),
  n_white = n_distinct(demo %>% filter(race_ethnicity == "NH White")),
  n_oth_unk = n_distinct(demo %>% filter(race_ethnicity %in% c("NH AI, AN, or other race", "Unknown by patient")))
)

# TODO make a table of race/eth to report %'s inline

table1 <- study_pop %>% 
  distinct(StudyID, .keep_all = TRUE) %>%
  tbl_summary(include = c(sex, race_ethnicity, hispanic, marital_status, CTCAGE_AT_DIAGNOSIS, CTCDATE_OF_DIAGNOSIS_YYYY, laterality, stage_summary, estrogen_receptor, reporting_source), sort = list(c(sex) ~ "frequency"))

as_flex_table(table1)
```

### Results

Our study population consisted of `r formatC(pop_info$total_study, big.mark = ",")` patients. There are `r formatC(raceeth$n_white, big.mark = ",")` patients of White race, `r formatC(raceeth$n_blackAA, big.mark = ",")` Black or African American, `r formatC(raceeth$asian, big.mark = ",")` Asian, `r formatC(raceeth$n_oth_unk, big.mark = ",")` who were of Alaskan Native, American Indian, other, or unknown race, and of `r formatC(raceeth$n_hispanic, big.mark = ",")` Hispanic ethnicity.

Insert demographic and clinical characteristics.

```{r}
#| eval: false
#| echo: false
#| warning: false
#| label: run-cma

# this is code that would be used to get CMA
# first is the function does OW per person then there are a few steps to prep data for function, which is below function 
run_CMA <- function(data, cma_choice, FU_start, FU_duration){
  OW_duration <- min(208, first(data$OW_duration))
  Jan1 <- as.Date("2018-01-01", format = "%Y-%m-%d") 
  
  cma <- CMA_sliding_window(CMA.to.apply = cma_choice,
                     data = data,
                     ID.colname = "StudyID",
                     event.date.colname = "dispense_dt",
                     event.duration.colname = "days_supply",
                     event.daily.dose.colname ="daily_dose",
                     medication.class.colname = "AETdrug",
                     carry.only.for.same.medication = FALSE,
                     consider.dosage.change = FALSE,
                     followup.window.start = FU_start,
                     followup.window.duration = FU_duration,
                     followup.window.duration.unit = "weeks",
                     observation.window.start = Jan1,
                     observation.window.duration = OW_duration,
                     observation.window.duration.unit = "weeks",
                     sliding.window.start = 0, 
                     sliding.window.start.unit = "weeks",
                     sliding.window.duration = 4,
                     sliding.window.duration.unit = "weeks",
                     # if window and step are same, there is no overlap
                     sliding.window.step.duration = 4,
                     sliding.window.step.unit = "weeks",
                     date.format = "%Y/%m/%d",
                     parallel.backend = "none",
                     parallel.threads = 1) 
  result <- as_tibble(cma$CMA)
  return(result)
}

## 1. get each person's overall treatment episode and IDs
IDlist <- study_pop %>%
  group_by(StudyID) %>%
  arrange(dispense_dt) %>%
   summarise(first_dispense = min(dispense_dt),
          last_dispense = max(dispense_dt),
          days_supply = last(days_supply)) %>%
  mutate(OW_end = last_dispense + days_supply + 30,
         OW_duration = as.integer(ceiling((difftime(OW_end, "2018-01-01", units = "weeks"))/4) * 4)) %>%
  select(StudyID, first_dispense, last_dispense, OW_end, OW_duration)

## 2. add columns back
study_run <- study_pop %>%
  inner_join(IDlist, by = "StudyID")

## 3. set study period 
# starting follow up 16 weeks before study period to allow for fill in use on Jan 1 2018
FU_start <- as.Date("2017-10-09", format = "%Y-%m-%d") 
COVID_start <- as.Date("2020-03-11", format = "%Y-%m-%d")
FU_end <- as.Date("2022-01-01", format = "%Y-%m-%d")
FU_dur <- as.integer(difftime(FU_end, FU_start, units = "weeks"))

## 4. run CMA. Function allows for varied observation windows among patients
dataset <- study_run %>%
  group_by(StudyID) %>%
  do(run_CMA(., "CMA5", FU_start, FU_dur)) 
pdc_cma5 <- as_tibble(dataset)
saveRDS(pdc_cma5, "./data/pdc-cma5.rds")
# was run on 03-11-24 after new updates to dataset
```

```{r}
#| include: false
#| label: get-results-function

# function that outputs regression table and basic ggplot
# input dataset is the output of CMA results saved as tibble
get_cma_results <- function(dataset, COVID_start){
  reg_output <- c()
  reg_summary <- c()
  reg_plot <- c()
  results_list <- c()
  
  dataset <- dataset %>%
      mutate(adherent = case_when(
      CMA >= 0.80 ~ 1,
      CMA < 0.80 ~ 0)) %>%
    group_by(window.ID, window.start) %>%
    reframe(adherent_count = sum(adherent == 1, na.rm = TRUE), 
            non_adherent_count = sum(adherent == 0, na.rm = TRUE),
            adherent_NA_count = sum(is.na(adherent)),
            # TODO run CMAs again, updated to mean() because of NAs
            prop_adherent = mean(adherent, na.rm = TRUE),
            prop_NA = adherent_NA_count/(adherent_NA_count + adherent_count + adherent_NA_count),
          inverse_prop_NA = 1 - prop_NA) %>%
    mutate(post_COVID = if_else(window.start >= COVID_start, 1, 0)) %>%
    distinct()
  
  its <- lm(prop_adherent ~ window.ID + post_COVID + window.ID*post_COVID, data = dataset)
  reg_summary <- summary(its)
  
  dataset2 <- dataset %>% na.omit(prop_adherent) %>%
    mutate(fit = predict(its))

  reg_plot <- ggplot(dataset2, aes(x = window.start, y = prop_adherent)) +
    geom_point() +
    geom_line(aes(y = fit), colour = "blue", linewidth = 1) +
    geom_vline(xintercept = COVID_start, colour = "red") 
  
  results_list <- list(data_summary = dataset,
                       reg_output = its,
                   reg_summary = reg_summary,
                   reg_plot = reg_plot)
  return(results_list)
}
```

```{r}
#| echo: false
#| warning: false
#| label: main-its
#| fig-cap: "Main plot"

COVID_start <- as.Date("2020-03-11", format = "%Y-%m-%d")
cma5 <- readRDS("./data/pdc-cma5.rds")

pdc_results <- get_cma_results(cma5, COVID_start)
# function output is dataset with summaries for each time interval, regression model, regression summary, and plot for times with NO missings.
main_plot <- pdc_results$reg_plot + 
labs(x = "Year", y = "Proportion Adherent (80%)") +
  scale_y_continuous(limits = c(0.5,1)) + 
  theme_bw()
main_plot
```

Figure 1 produced above. It looks like there is a decrease in adherence before the pandemic and another decrease afterward, but these results should be taken with caution as they are not linear and in fact, not significantly different from 0 or each other.

```{r}
#| echo: false
#| warning: false
#| label: main-reg-table
#| tbl-cap: "Regression table"

# TODO add title, change vars shown
as_flex_table(pdc_results$reg_summary %>%
  tbl_regression(estimate_fun = ~ style_number(.x, digits = 4)))
```

The regression table is above. The beta1 is the slope of adherence pre-pandemic, beta2 us the change in slope due to pandemic start, and the beta2 is the slope of adherence during the pandemic. Overall, estimates are close to zero suggesting no linear change.

We repeated this among demographic subgroups of interest.

```{r}
#| echo: false
#| warning: false
#| label: by-race
#| fig-cap: "By race"

# Code to create groups is above

# White 
pdc_white <- demo %>%
  filter(race_ethnicity == "NH White") %>%
  left_join(cma5, by = "StudyID") %>%
  get_cma_results(COVID_start)
# TODO remove title
white_plot <- pdc_white$reg_plot + 
labs(title = "NH White", x = "Year", y = "Proportion Adherent (80%)") +
  scale_y_continuous(limits = c(0.5,1)) + theme_bw()

# Black 
pdc_blackAA <- demo %>%
  filter(race_ethnicity == "NH Black or AA") %>%
  left_join(cma5, by = "StudyID") %>%
  get_cma_results(COVID_start)
blackAA_plot <- pdc_blackAA$reg_plot + 
labs(title = "NH Black or AA", x = "Year", y = "Proportion Adherent (80%)") +
  scale_y_continuous(limits = c(0.5,1)) + theme_bw()

# Asian 
pdc_asian <- demo %>%
  filter(race_ethnicity == "NH Asian") %>%
  left_join(cma5, by = "StudyID") %>%
  get_cma_results(COVID_start)
asian_plot <- pdc_asian$reg_plot + 
labs(title = "NH Asian", x = "Year", y = "Proportion Adherent (80%)") +
  scale_y_continuous(limits = c(0.5,1)) + theme_bw()

# Hispanic
pdc_hisp <- demo %>%
  filter(race_ethnicity == "Hispanic") %>%
  left_join(cma5, by = "StudyID") %>%
  get_cma_results(COVID_start)
hisp_plot <- pdc_hisp$reg_plot + 
labs(title = "Hispanic", x = "Year", y = "Proportion Adherent (80%)") +
  scale_y_continuous(limits = c(0.5,1)) + theme_bw()

# TODO eventually remove titles and label using patchwork
plot_by_race <- (white_plot + blackAA_plot) / (asian_plot + hisp_plot)
plot_by_race
```

They look different, but keep in mind population sizes differ.

```{r}
#| echo: false
#| warning: false
#| label: subgroup-tables
#| tbl-cap: "race regressions"

as_flex_table(pdc_white$reg_summary %>%
  tbl_regression(estimate_fun = ~ style_number(.x, digits = 4)) %>%
    modify_caption("NH White") %>%
    modify_header(label = "**Variable**"))

as_flex_table(pdc_blackAA$reg_summary %>%
  tbl_regression(estimate_fun = ~ style_number(.x, digits = 4)) %>%
    modify_caption("NH Black or AA") %>%
    modify_header(label = "**Variable**"))
  
as_flex_table(pdc_asian$reg_summary %>%
  tbl_regression(estimate_fun = ~ style_number(.x, digits = 4)) %>%
    modify_caption("NH Asian") %>%
    modify_header(label = "**Variable**"))

as_flex_table(pdc_hisp$reg_summary %>%
  tbl_regression(estimate_fun = ~ style_number(.x, digits = 4)) %>%
    modify_caption("Hispanic") %>%
    modify_header(label = "**Variable**"))
```

Also compared rural vs. urban

```{r}
#| echo: false
#| warning: false
#| fig-cap: urban-rural

# Urban 
pdc_urban <- demo %>%
  filter(urb_rural == "Urban") %>%
  left_join(cma5, by = "StudyID") %>%
  get_cma_results(COVID_start)
urban_plot <- pdc_urban$reg_plot + 
labs(title = "Urban (n=8,496)", x = "Year", y = "Proportion Adherent (80%)") +
  scale_y_continuous(limits = c(0.5,1)) + theme_bw()

# Hispanic
pdc_rural <- demo %>%
  filter(urb_rural == "Rural") %>%
  left_join(cma5, by = "StudyID") %>%
  get_cma_results(COVID_start)
rural_plot <- pdc_rural$reg_plot + 
labs(title = "Rural (n=160)", x = "Year", y = "Proportion Adherent (80%)") +
  scale_y_continuous(limits = c(0.5,1)) + theme_bw()

urb_rur_plot <- urban_plot / rural_plot
urb_rur_plot

as_flex_table(pdc_urban$reg_summary %>%
  tbl_regression(estimate_fun = ~ style_number(.x, digits = 4)) %>%
    modify_caption("Urban") %>%
    modify_header(label = "**Variable**"))

as_flex_table(pdc_rural$reg_summary %>%
  tbl_regression(estimate_fun = ~ style_number(.x, digits = 4)) %>%
    modify_caption("Rural") %>%
    modify_header(label = "**Variable**"))
```

### Additional material

The study population and total population seem similar by clinical and demographic characteristics.

```{r}
#| echo: false
#| warning: false
#| label: eligible-table
#| tbl-cap: "Full population"

table1 <- pharmstudydata %>% 
  distinct(StudyID, .keep_all = TRUE) %>%
  select(sex, race_collapsed, hispanic, marital_status, CTCAGE_AT_DIAGNOSIS, CTCDATE_OF_DIAGNOSIS_YYYY, laterality, stage_summary, estrogen_receptor, reporting_source, final_study) %>%
  tbl_summary(by = final_study)

as_flex_table(table1)

#TODO add April and/or recentering of COVID time 0
```
