---
title: "CMAsandbox"
format: docx
editor: visual
editor_options: 
  chunk_output_type: console
---

# Notebook

Chrystelle Kiang

Goal: consolidate notes on analyses, like a lab notebook.

## Running CMAs

```{r}
#| echo: false

# setup
library(here) 
library(tidyverse)
library(AdhereR)

# import study dataset (created in data creation.R file) 
studypopdata <- readRDS("studypopdata.rds")
```

2024-2-4: The study population dataset has:

-   everyone eligible based on year of diagnosis and stage

-   pharmacy claims for patients whose ID matches for AI and Tamoxifen

There are extra people who do not have pharm data, can report those #s later. Created an "elig_rx" variable to flag those who have an rx after 2015. I think the patients with dispenses before diagnosis may be recurrences; will delete.

```{r}
# subset to those with prescription after their diagnosis date
studypopdata <- studypopdata %>%
  mutate(daily_dose = 1, # creating daily dose variable for AdhereR
         # combined diagnosis date variable 
         dt_diagnosis = as.Date(
           paste(CTCDATE_OF_DIAGNOSIS_YYYY,
           sprintf("%02d", as.numeric(CTCDATE_OF_DIAGNOSIS_MM)),
           sprintf("%02d", as.numeric(CTCDATE_OF_DIAGNOSIS_DD)),
           sep = "-"),
         format = "%Y-%m-%d")) 

# want to get StudyIDs of those who have any rx before dx
# will then use that list to extract from studypopdata
# maybe can do this by grouping?
rx_before_dx <- studypopdata %>%
  filter(dispense_dt <= dt_diagnosis) %>%
    distinct(StudyID, .keep_all = TRUE)

studydata <- studypopdata %>% 
  anti_join(rx_before_dx, by = "StudyID") %>%
  filter(!is.na(dispense_dt)) # only keep those with pharm info

```

Looked at 3 random patients and one has a lot of missing because they have both AI and TAM overlapping times. More notes on this below code chunk.

```{r}
#| echo: false
## data exploration
drugsbystudyID <- studydata %>%
  group_by(StudyID) %>%
  summarise(n_drug = n_distinct(drug_group)) 


doubles <- studydata %>%
  inner_join(drugsbystudyID, by = "StudyID") %>%
  filter(n_drug > 1)
  

ndrug <- as.matrix(table(drugsbystudyID$n_drug))

ggplot(doubles, aes(x = dispense_dt, y = StudyID, group = StudyID, colour = drug_group)) + geom_point() + geom_line(aes(group = StudyID))
# TODO sort out these people with both types. 

# omitting for now
studydata <- studydata %>%
  inner_join(drugsbystudyID, by = "StudyID") %>%
  filter(n_drug == 1) %>%
  mutate(AETdrug = case_when(drug_group %in% c("AI","TAMOXIFEN") ~ "ET"))

#TODO run CMA again but not omitting multiple drugs 
ggplot(studydata, aes(x = dispense_dt, y = StudyID, group = StudyID, colour = drug_group)) + geom_point() 
```

2-6-2024: Talked with Tim.

-   People with both drug groups: there are valid reasons that people would switch. 1) AI to TAM for pre-meno who then start menopause. 2) TAM to AI if postmeno have bad side effects

-   Prescription before diagnosis date: some people are prescribed TAM to shrink tumor before surgery.

    -   Q of whether the date of diagnosis may be overridden at surgery (vs. biopsy)

    -   Q about tumor record number vs. "succession" number for repeated tumors

    -   TLL thinks it's odd that 0 bilateral

-   Can combine medication, no need to keep AI and TAM separately -- should include all drugs

AdhereR Package CMA1 and CMA2 map to MPR.

-   Continuous Medication Availability (CMA)

    -   CMA1 is \# days supply excluding last dispense event/first to last dispense event

    -   CMA2 is similar to CMA1 but *includes* last dispense event and time is based on the observation window (OW) specified. Not sure how the OW works when CMA2 used with sliding window.

    -   CMA3 is CMA1 capped at 1.0

    -   CMA4 is CMA2 capped at 1.0

    -   CMA7 is \# days theoretical use/observation window period, where gap days between dispenses are not included in time interval; so this allows for carryover and excludes the left over supply

    -   CMA8 is \# days theoretical use/observation window *with lagged start*, where gap days are not included in time interval, and the lag is the days of carry over supply

    -   CMA9 is (# observation window days weighted by ratio of days supply)/observation window. This means carry over and extra supply is evenly spread until next event

```{r}
#| echo: false
# Feb 5 2024
studydata <- studydata %>%
  group_by(StudyID) %>%
  arrange(dispense_dt) 

# CMA3
slide_cma3 <- CMA_sliding_window(CMA.to.apply="CMA3", 
                                 data = studydata,
                                 ID.colname = "StudyID",
                                 event.date.colname = "dispense_dt",
                                 event.duration.colname = "days_supply",
                                 event.daily.dose.colname ="daily_dose",
                                 medication.class.colname = "AETdrug",
                                 carry.only.for.same.medication = FALSE,
                                 consider.dosage.change = FALSE,
                                 followup.window.start = 0,
                                 followup.window.duration = 4,
                                 followup.window.duration.unit = "years",
                                 observation.window.start = 0,
                                 observation.window.duration = 4,
                                 observation.window.duration.unit = "years",
                                 sliding.window.start = 0, 
                                 sliding.window.start.unit = "weeks",
                                 sliding.window.duration = 4,
                                 sliding.window.duration.unit = "weeks",
                                 # if window and step are same, there is no overlap
                                 sliding.window.step.duration = 2,
                                 sliding.window.step.unit = "weeks",
                                 date.format = "%Y/%m/%d",
                                 parallel.backend = "none",
                                 parallel.threads = 1)

cma3 <- as_tibble(slide_cma3$CMA)

cma3_means <- cma3 %>%
  group_by(StudyID) %>%
  summarise(meancma = mean(CMA, na.rm = TRUE)) 

summary(cma3_means$meancma)

ggplot(cma3, aes(x = window.start, y = CMA, group = StudyID)) + 
  geom_point() + geom_line()

plot(slide_cma3, patients.to.plot = c(28049, 930))

cma3_2018 <- cma3 %>%
  filter(window.start >= as.Date("2018-01-01", format = "%Y-%m-%d"))
#TODO can I set start to a date? or subset studydata to 2018? 

ids <- studydata %>%
  distinct(StudyID, .keep_all = TRUE) %>%
  select(-dispense_dt)

cma3_2018 <- cma3_2018 %>%
  full_join(ids, by = "StudyID")

ggplot(cma3_2018, aes(x = window.start, y = CMA, group = StudyID)) + 
  geom_point() 
```

2-6-2024: Need to reconcile merging these two back together. Not sure if ITS can be done with different window dates that CMA outputs, or if I should create a new date that goes through and looks for next closest date and fills in or something.

Jan 2024: CMA1 and CMA2 produced MPRs WAY over 1. So compared CMA3 and CMA4 which are capped at 1.0 (Jan 23). Need to evaluate if CMA7, 8, and 9 are more appropriate (because of gaps and overlaps).

Did some rough estimates to compare the CMAs... (see previous version of code)

-   CMA3 and CMA4 really do tend towards 1 while CMA7 and CMA9 have much lower means?? Perhaps need to plot over time though.

-   ...CMA3 and CMA4 have more missings though while CMA7 and CMA9 still provide some estimate.

Update Jan 23: after discussion with Tim, CMA3 is probably appropriate and more likely. My thought is that I'm wasting time trying to compare these measures and should just stick to CMA3... assuming that the sliding window addresses any overlaps or gaps in prescriptions.

```{r}
#TODO ensure studydata is right one
# subset to merge back with AdhereR output
studyIDsonly <- studydata %>%
  group_by(StudyID) %>%
  mutate(dispense_year = year(min(dispense_dt))) %>%
  ungroup() %>%
  distinct(StudyID, .keep_all = TRUE) 
```

TODO - update: CMA3 with different medication settings, maybe just writing some code to pick the drug group that has greater \# of dispenses.
